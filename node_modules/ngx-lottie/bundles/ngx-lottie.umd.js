(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('rxjs'), require('rxjs/operators'), require('@angular/platform-browser')) :
    typeof define === 'function' && define.amd ? define('ngx-lottie', ['exports', '@angular/core', '@angular/common', 'rxjs', 'rxjs/operators', '@angular/platform-browser'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ngx-lottie'] = {}, global.ng.core, global.ng.common, global.rxjs, global.rxjs.operators, global.ng.platformBrowser));
}(this, (function (exports, i0, common, rxjs, operators, i1) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from) {
        for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
            to[j] = from[i];
        return to;
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var LOTTIE_OPTIONS = new i0.InjectionToken('LottieOptions');

    function streamifyPlayerOrLoader(player) {
        var playerOrLoader = player();
        if (playerOrLoader instanceof Promise) {
            return rxjs.from(playerOrLoader).pipe(operators.map(function (module) { return module.default || module; }), operators.publishReplay(1), operators.refCount());
        }
        else {
            return rxjs.of(playerOrLoader);
        }
    }
    var AnimationLoader = /** @class */ (function () {
        function AnimationLoader(ngZone, options) {
            this.ngZone = ngZone;
            this.options = options;
            this.player$ = streamifyPlayerOrLoader(this.options.player).pipe(operators.observeOn(rxjs.animationFrameScheduler));
        }
        AnimationLoader.prototype.loadAnimation = function (options) {
            var _this = this;
            return this.player$.pipe(operators.map(function (player) { return _this.createAnimationItem(player, options); }));
        };
        AnimationLoader.prototype.resolveOptions = function (options, container) {
            return Object.assign({
                container: container,
                renderer: 'svg',
                loop: true,
                autoplay: true,
            }, options);
        };
        AnimationLoader.prototype.createAnimationItem = function (player, options) {
            return this.ngZone.runOutsideAngular(function () { return player.loadAnimation(options); });
        };
        return AnimationLoader;
    }());
    AnimationLoader.decorators = [
        { type: i0.Injectable }
    ];
    /** @nocollapse */
    AnimationLoader.ctorParameters = function () { return [
        { type: i0.NgZone },
        { type: undefined, decorators: [{ type: i0.Inject, args: [LOTTIE_OPTIONS,] }] }
    ]; };

    var BaseDirective = /** @class */ (function () {
        function BaseDirective(ngZone, platformId, animationLoader) {
            this.ngZone = ngZone;
            this.platformId = platformId;
            this.animationLoader = animationLoader;
            this.options = null;
            this.containerClass = null;
            this.styles = null;
            /**
             * `animationCreated` is dispatched after calling `loadAnimation`.
             */
            this.animationCreated = this.getAnimationItem();
            /**
             * `complete` is dispatched after completing the last frame.
             */
            this.complete = this.awaitAnimationItemAndStartListening('complete');
            /**
             * `loopComplete` is dispatched after completing the frame loop.
             */
            this.loopComplete = this.awaitAnimationItemAndStartListening('loopComplete');
            /**
             * `enterFrame` is dispatched after entering the new frame.
             */
            this.enterFrame = this.awaitAnimationItemAndStartListening('enterFrame');
            /**
             * `segmentStart` is dispatched when the new segment is adjusted.
             */
            this.segmentStart = this.awaitAnimationItemAndStartListening('segmentStart');
            /**
             * Original event name is `config_ready`. `config_ready` is dispatched
             * after the needed renderer is configured.
             */
            this.configReady = this.awaitAnimationItemAndStartListening('config_ready');
            /**
             * Original event name is `data_ready`. `data_ready` is dispatched
             * when all parts of the animation have been loaded.
             */
            this.dataReady = this.awaitAnimationItemAndStartListening('data_ready');
            /**
             * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched
             * when elements have been added to the DOM.
             */
            this.domLoaded = this.awaitAnimationItemAndStartListening('DOMLoaded');
            /**
             * `destroy` will be dispatched when the component gets destroyed,
             * it's handy for releasing resources.
             */
            this.destroy = this.awaitAnimationItemAndStartListening('destroy');
            /**
             * `error` will be dispatched if the Lottie player could not render
             * some frame or parse config.
             */
            this.error = this.awaitAnimationItemAndStartListening('error');
            this.destroy$ = new rxjs.Subject();
            this.loadAnimation$ = new rxjs.Subject();
            this.animationItem$ = new rxjs.BehaviorSubject(null);
            this.setupLoadAnimationListener();
        }
        BaseDirective.prototype.ngOnDestroy = function () {
            this.destroy$.next();
            this.destroyAnimation();
        };
        BaseDirective.prototype.loadAnimation = function (changes, container) {
            this.loadAnimation$.next([changes, container]);
        };
        BaseDirective.prototype.getAnimationItem = function () {
            var _this = this;
            return rxjs.defer(function () { return _this.animationItem$; }).pipe(operators.filter(function (animationItem) { return animationItem !== null; }));
        };
        BaseDirective.prototype.awaitAnimationItemAndStartListening = function (name) {
            var _this = this;
            return this.getAnimationItem().pipe(operators.switchMap(function (animationItem) {
                // `fromEvent` will try to call `removeEventListener` when `unsubscribe()` is invoked.
                // The problem is that `ngOnDestroy()` is called before Angular unsubscribes from
                // `@Output()` properties, thus `animationItem` will be `null` already, also `lottie-web`
                // removes event listeners when calling `destroy()`.
                return new rxjs.Observable(function (observer) {
                    animationItem.addEventListener(name, function (event) {
                        _this.ngZone.runOutsideAngular(function () {
                            observer.next(event);
                        });
                    });
                });
            }));
        };
        BaseDirective.prototype.setupLoadAnimationListener = function () {
            var _this = this;
            this.loadAnimation$
                .pipe(operators.filter(function (_a) {
                var _b = __read(_a, 1), changes = _b[0];
                return common.isPlatformBrowser(_this.platformId) && changes.options !== undefined;
            }), operators.switchMap(function (_a) {
                var _b = __read(_a, 2), changes = _b[0], container = _b[1];
                _this.destroyAnimation();
                return _this.animationLoader.loadAnimation(_this.animationLoader.resolveOptions(changes.options.currentValue, container));
            }), operators.takeUntil(this.destroy$))
                .subscribe(function (animationItem) {
                _this.animationItem$.next(animationItem);
            });
        };
        BaseDirective.prototype.destroyAnimation = function () {
            var animationItem = this.animationItem$.getValue();
            // The `ng-lottie` component or the `lottie` directive can be destroyed
            // before the `animationItem` is set, thus it will fail with
            // `Cannot read property 'destroy' of null`.
            // Potentially it can happen if the directive gets destroyed before change
            // detection is run.
            if (animationItem === null) {
                return;
            }
            // `destroy()` will remove all events listeners.
            animationItem.destroy();
            this.animationItem$.next(null);
        };
        return BaseDirective;
    }());
    BaseDirective.decorators = [
        { type: i0.Directive, args: [{ selector: '[lottie]' },] }
    ];
    /** @nocollapse */
    BaseDirective.ctorParameters = function () { return [
        { type: i0.NgZone },
        { type: String, decorators: [{ type: i0.Inject, args: [i0.PLATFORM_ID,] }] },
        { type: AnimationLoader }
    ]; };
    BaseDirective.propDecorators = {
        options: [{ type: i0.Input }],
        containerClass: [{ type: i0.Input }],
        styles: [{ type: i0.Input }],
        animationCreated: [{ type: i0.Output }],
        complete: [{ type: i0.Output }],
        loopComplete: [{ type: i0.Output }],
        enterFrame: [{ type: i0.Output }],
        segmentStart: [{ type: i0.Output }],
        configReady: [{ type: i0.Output }],
        dataReady: [{ type: i0.Output }],
        domLoaded: [{ type: i0.Output }],
        destroy: [{ type: i0.Output }],
        error: [{ type: i0.Output }]
    };

    var LottieDirective = /** @class */ (function (_super) {
        __extends(LottieDirective, _super);
        function LottieDirective(ngZone, platformId, host, animationLoader) {
            var _this = _super.call(this, ngZone, platformId, animationLoader) || this;
            _this.host = host;
            return _this;
        }
        LottieDirective.prototype.ngOnChanges = function (changes) {
            _super.prototype.loadAnimation.call(this, changes, this.host.nativeElement);
        };
        return LottieDirective;
    }(BaseDirective));
    LottieDirective.decorators = [
        { type: i0.Directive, args: [{ selector: '[lottie]' },] }
    ];
    /** @nocollapse */
    LottieDirective.ctorParameters = function () { return [
        { type: i0.NgZone },
        { type: String, decorators: [{ type: i0.Inject, args: [i0.PLATFORM_ID,] }] },
        { type: i0.ElementRef, decorators: [{ type: i0.Self }] },
        { type: AnimationLoader }
    ]; };

    var LottieComponent = /** @class */ (function (_super) {
        __extends(LottieComponent, _super);
        function LottieComponent(ngZone, platformId, animationLoader) {
            var _this = _super.call(this, ngZone, platformId, animationLoader) || this;
            _this.width = null;
            _this.height = null;
            _this.container = null;
            return _this;
        }
        LottieComponent.prototype.ngOnChanges = function (changes) {
            _super.prototype.loadAnimation.call(this, changes, this.container.nativeElement);
        };
        return LottieComponent;
    }(BaseDirective));
    LottieComponent.decorators = [
        { type: i0.Component, args: [{
                    selector: 'ng-lottie',
                    template: "\n    <div\n      #container\n      [style.width]=\"width || '100%'\"\n      [style.height]=\"height || '100%'\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  ",
                    changeDetection: i0.ChangeDetectionStrategy.OnPush
                },] }
    ];
    /** @nocollapse */
    LottieComponent.ctorParameters = function () { return [
        { type: i0.NgZone },
        { type: String, decorators: [{ type: i0.Inject, args: [i0.PLATFORM_ID,] }] },
        { type: AnimationLoader }
    ]; };
    LottieComponent.propDecorators = {
        width: [{ type: i0.Input }],
        height: [{ type: i0.Input }],
        container: [{ type: i0.ViewChild, args: ['container', { static: true },] }]
    };

    var LottieModule = /** @class */ (function () {
        function LottieModule() {
        }
        LottieModule.forRoot = function (options) {
            return {
                ngModule: LottieModule,
                providers: [
                    AnimationLoader,
                    {
                        provide: LOTTIE_OPTIONS,
                        useValue: options,
                    },
                ],
            };
        };
        return LottieModule;
    }());
    LottieModule.decorators = [
        { type: i0.NgModule, args: [{
                    imports: [common.CommonModule],
                    declarations: [BaseDirective, LottieDirective, LottieComponent],
                    exports: [BaseDirective, LottieDirective, LottieComponent],
                },] }
    ];

    var CacheableAnimationLoader = /** @class */ (function (_super) {
        __extends(CacheableAnimationLoader, _super);
        function CacheableAnimationLoader() {
            var _this = _super.apply(this, __spreadArray([], __read(arguments))) || this;
            _this.cache = new Map();
            return _this;
        }
        CacheableAnimationLoader.prototype.loadAnimation = function (options) {
            var _this = this;
            return this.player$.pipe(operators.map(function (player) {
                var animationItem = _this.createAnimationItem(player, _this.transformOptions(options));
                _this.awaitConfigAndCache(options, animationItem);
                return animationItem;
            }));
        };
        CacheableAnimationLoader.prototype.awaitConfigAndCache = function (options, animationItem) {
            var _this = this;
            if (this.isAnimationConfigWithPath(options)) {
                // Don't wait for the `config_ready` event if it has been cached previously.
                if (this.cache.has(options.path)) {
                    return;
                }
                animationItem.addEventListener('config_ready', function () {
                    _this.cache.set(options.path, animationItem['animationData']);
                });
            }
        };
        CacheableAnimationLoader.prototype.transformOptions = function (options) {
            if (this.isAnimationConfigWithPath(options) && this.cache.has(options.path)) {
                return Object.assign(Object.assign({}, options), { path: undefined, animationData: this.cache.get(options.path) });
            }
            else {
                return options;
            }
        };
        CacheableAnimationLoader.prototype.isAnimationConfigWithPath = function (options) {
            return typeof options.path === 'string';
        };
        return CacheableAnimationLoader;
    }(AnimationLoader));
    CacheableAnimationLoader.decorators = [
        { type: i0.Injectable }
    ];

    var LottieCacheModule = /** @class */ (function () {
        function LottieCacheModule() {
        }
        LottieCacheModule.forRoot = function () {
            return {
                ngModule: LottieCacheModule,
                providers: [
                    {
                        provide: AnimationLoader,
                        useClass: CacheableAnimationLoader,
                    },
                ],
            };
        };
        return LottieCacheModule;
    }());
    LottieCacheModule.decorators = [
        { type: i0.NgModule }
    ];

    function transformAnimationFilenameToKey(animation) {
        var _a = __read(animation.split('.json'), 1), animationName = _a[0];
        return "animation-" + animationName;
    }

    var LottieTransferState = /** @class */ (function () {
        function LottieTransferState(transferState) {
            this.transferState = transferState;
        }
        LottieTransferState.prototype.get = function (animation) {
            var animationKey = transformAnimationFilenameToKey(animation);
            var stateKey = i1.makeStateKey(animationKey);
            return this.transferState.get(stateKey, null);
        };
        return LottieTransferState;
    }());
    /** @nocollapse */ LottieTransferState.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function LottieTransferState_Factory() { return new LottieTransferState(i0__namespace.ɵɵinject(i1__namespace.TransferState)); }, token: LottieTransferState, providedIn: "root" });
    LottieTransferState.decorators = [
        { type: i0.Injectable, args: [{ providedIn: 'root' },] }
    ];
    /** @nocollapse */
    LottieTransferState.ctorParameters = function () { return [
        { type: i1.TransferState }
    ]; };

    /**
     * The public api for consumers of ngx-lottie
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.BaseDirective = BaseDirective;
    exports.LottieCacheModule = LottieCacheModule;
    exports.LottieComponent = LottieComponent;
    exports.LottieDirective = LottieDirective;
    exports.LottieModule = LottieModule;
    exports.LottieTransferState = LottieTransferState;
    exports.transformAnimationFilenameToKey = transformAnimationFilenameToKey;
    exports.ɵb = LOTTIE_OPTIONS;
    exports.ɵc = AnimationLoader;
    exports.ɵd = CacheableAnimationLoader;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngx-lottie.umd.js.map
